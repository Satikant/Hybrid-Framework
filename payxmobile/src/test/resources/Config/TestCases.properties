#----------------------COMMON  LOGIN  TEST CASES ----------------------------------------

LOGIN01    =   To verify that user should not login with Invalid MSISDN .  
LOGIN02    =   To verify that user should not login with invalid prefix followed by MSISDN
LOGIN03    =   To verify that user should not login with invalid length of MSISDN .                                        
LOGIN04    =   To verify that user should not login with Invalid length of Password.                                                 
LOGIN05    =   To verify that user should not login with Invalid Password.                                       
LOGIN06    =   To verify that Proper validation should be displayed in entered Pin is wrong for 2nd Time.                  
LOGIN07    =   To verify that Proper validation should be displayed in entered Pin is wrong for 3rd Time.                  
LOGIN08    =   To verify that user should not login if User is blocked for Entering invalid PIN more than configured limit.
LOGIN09    =   To verify that user should not login with Blacklisted Mobile Number.                                        
LOGIN10    =   To verify that user should not login with Suspended Mobile Number.                                          
LOGIN11    =   To verify that user should not login with Blacklisted Device.                                               
LOGIN12    =
LOGIN13    =
LOGIN14    =
LOGIN15    =
LOGIN16    =  To verify that user should be login successfully with valid MSISDN And PIN.
SM0001    =   To verify that user should be able to perform Send Money to recent payee.
SM0002    =   To verify that user should be able to perform Send Money to favourite payee.
SM0003    =   To verify that user should be able to perform Send Money to consumer mobile number.


MP0001    =   To verify that user should be able to perform Merchant Payment to recent merchant.
MP0002    =   To verify that user should be able to perform Merchant Payment to favourite merchant.
MP0003    =   To verify that user should be able to perform Merchant Payment to merchant mobile number.




CASHOUT001 = To verify that user should not perform  CASH OUT with special characters  as Agent Code or MSISDN.
CASHOUT002 = To verify that user should not perform  CASH OUT with empty value  for Agent Code or MSISDN.
CASHOUT003 = To verify that user should not perform  CASH OUT with Incomplete  Agent Code or MSISDN.
CASHOUT004 = To verify that user should not perform  CASH OUT with invalid  Agent Code or MSISDN.
CASHOUT005 = To verify that user should not perform  CASH OUT with Zero amount.
CASHOUT006 = To verify that user should not perform  CASH OUT with null amount.
CASHOUT007 = To verify that user should not perform  CASH OUT with below configured amount.
CASHOUT008 = To verify that user should not perform  CASH OUT with Insufficient Amount.
CASHOUT009 = To verify that user should not perform  CASH OUT without entering the Mobile PIN.
CASHOUT010 = To verify that user should not perform  CASH OUT with Incomplete  Mobile PIN.
CASHOUT011 = To verify that user should not perform  CASH OUT with invalid Mobile PIN for 1st time.
CASHOUT012 = To verify that user should not perform  CASH OUT with invalid Mobile PIN for 2nd time.
CASHOUT013 = To verify that user should not perform  CASH OUT with invalid Mobile PIN for 3rd time.
CASHOUT014 = To verify that user should be blocked after entering the invalid Mobile PIN more than configured limit.
CASHOUT015 = To verify that user should not be able  perform CASH OUT  when user is blocked due to  entering invalid PIN for multiple times.
CASHOUT016 = To verify that user should not be able  perform CASH OUT  when payee is barred as receiver.
CASHOUT017 = To verify that user should not be able  perform CASH OUT  with valid details.

SM001 = To verify that user should not perform  SEND MONEY with special characters MSISDN.
SM002 = To verify that user should not perform  SEND MONEY with empty value  for MSISDN.
SM003 = To verify that user should not perform  SEND MONEY with Incomplete MSISDN.
SM004 = To verify that user should not perform  SEND MONEY with invalid  MSISDN.
SM005 = To verify that user should not perform  SEND MONEY with Zero amount.
SM006 = To verify that user should not perform  SEND MONEY with null amount.
SM007 = To verify that user should not perform  SEND MONEY with below configured amount.
SM008 = To verify that user should not perform  SEND MONEY with Insufficient Amount.
SM009 = To verify that user should not perform  SEND MONEY without entering the Mobile PIN.
SM010 = To verify that user should not perform  SEND MONEY with Incomplete  Mobile PIN.
SM011 = To verify that user should not perform  SEND MONEY with invalid Mobile PIN for 1st time.
SM012 = To verify that user should not perform  SEND MONEY with invalid Mobile PIN for 2nd time.
SM013 = To verify that user should not perform  SEND MONEY with invalid Mobile PIN for 3rd time.
SM014 = To verify that user should be blocked after entering the invalid Mobile PIN more than configured limit.
SM015 = To verify that user should not be able  perform SEND MONEY  when user is blocked due to  entering invalid PIN for multiple times.
SM016 = To verify that user should not be able  perform SEND MONEY  when payee is barred as receiver.
SM017 = To verify that user should not be able  perform SEND MONEY  when payer is barred as sender.
SM018 = To verify that user should not be able  perform SEND MONEY  when payer is barred as both.
SM019 = To verify that user should not be able  perform SEND MONEY  when payee is barred as both.
SM020 = To verify that proper error message should be displayed when user performs send money to own msisdn.
SM021 = To verify that user should be able to Retry transaction, on clicking Retry button if a transaction fails by entering wrong pin.
SM022 = To verify that proper service charge and commission should be applied when the transaction is performed successfully.
SM023 = To verify that user should be able  perform SEND MONEY  with valid details.
SM024 = To verify that successful SEND MONEY transaction should be available in recent transaction list.
SM025 = To verify that user should be able to mark the 2 P2P transaction as Favorite Transaction from Success Screen.
SM026 = To verify that user should be able to perform SEND MONEY from Favorite Transaction.
SM027 = To verify that user should be able to remove the  P2P transaction as Favorite Transaction from Success Screen.
SM028 = To verify that user should be able to delete favourites from manage favourite option.
SM029 = To Verify that user should be able to perform SEND MONEY from  recent Transaction.
SM030 = To verify that user should be ablr to edit the amount while performing the SEND MONEY through  Favorite Transaction.
SM031 = To verify that user should be ablr to edit the amount while performing the SEND MONEY through  Recent Transaction.
SM032 = To verify that user be redirected to mobile number screen after clicking on make another payment.
SM033 = To verify that user should be able to view the details in the view statement.
SM034 = To verify that user should be able to reach out help and support by selecting help and support option.


#------------------------------x-------------x--------------------------

#----------------------LOGIN----------------------------------------

TC0001    =   To verify that user should not login with Empty MSISDN Field.  
TC0002    =   To verify that user should not login with Invalid MSISDN .
TC0003    =   To verify that user should not login with Incomplete MSISDN .
TC0004    =   To verify that user should not login with Empty Password Field. 
TC0005    =   To verify that user should not login with Invalid Password.
TC0006    =   To verify that Proper validation should be displayed in entered Pin is wrong for 2nd Time.
TC0007    =   To verify that Proper validation should be displayed in entered Pin is wrong for 3rd Time.
TC0008    =   To verify that Proper validation should be displayed in entered Pin is wrong for 4th Time.
TC0009    =   To verify that Proper validation should be displayed in entered Pin is wrong for 5th Time.
TC0010    =   To verify that user should not login if User is blocked for Entering invalid PIN more than configured limit.
TC0011    =   To verify that user should not login with Incomplete PIN.   
TC0012    =   To verify that user should not login with Blacklisted Mobile Number.
TC0013    =   To verify that user should not login with Suspended Mobile Number.
TC0014    =   To verify that user should not login with Blacklisted Device.
TC0015    =   To verify that user should not login with Unregistered MSISDN.
TC0016    =   To verify that user should be login successfully with valid MSISDN And PIN.
#----------------------LOGOUT----------------------------------------

LOGOUT0001    =   To verify that user should be able to Logout.

#------------------------------x-------------x--------------------------

#----------------------Send MOney----------------------------------------

TC0017 = To verify that user should not send  money with Empty MSISDN Field.
TC0018 = To verify that user should not send money with Empty AMOUNT Field.
TC0019 = To verfy that the user should not be able to Send Money with Incomplete msisdn.
TC0020 = To verify that user should not perform Send Money with Invalid MSISDN.
TC0021 = To verify that user should not perform Send Money with ZERO AMOUNT.
TC0022 = To verify that user should not perform Send Money with amount more than avilable BALANCE.
TC0023 = To verify that user should not perform Send Money to BLACKLISTED MSISDN.
TC0024 = To verify that user should not perform Send Money to SUSPENDED MSISDN.
TC0025 = To verify that user should not perform Send Money to ITSELF.
TC0026 = To verify that user should perform Send Money successfully with valid MSISDN And PIN with country code +972.
TC0027 = To verify that user should perform Send Money successfully with valid MSISDN And PIN with country code +968.
TC0028 = To verify that user should perform Send Money successfully with valid MSISDN And PIN with country code +965.
TC0029 = To verify that user should perform Send Money successfully with valid MSISDN And PIN with country code +974.
TC0030 = To verify that user should perform Send Money successfully with valid MSISDN And PIN with country code +966.
TC0031 = To verify that user should perform Send Money successfully with valid MSISDN And PIN with country code +971.
TC0032 =
TC0033 =
TC0034 =
TC0035 =
TC0036 =
TC0037 =
TC0038 =
TC0039 =
TC0040 =
#-------------------------------Send Money-AhliBank---------------------------

TC_SM_AH_001 = To verify that Proper Error message should be displayed when Terms are not accepted.
TC_SM_AH_002 = To verify that Proper Error message should be displayed when MSISDN Field is empty.
TC_SM_AH_003 = To verify that Proper Error message should be displayed when Beneficiary Name Field is empty.
TC_SM_AH_004 = To verify that Proper Error message should be displayed when Amount Name Field is empty.
TC_SM_AH_005 = To verify that user should not perform Send Money with ZERO AMOUNT.
TC_SM_AH_006 = To verify that user should not perform Send Money to ITSELF.
TC_SM_AH_007 = To verify that Proper Error message should be displayed when OTP is not Entered.
TC_SM_AH_008 = To verify that user should be able to perform transaction successfully.
TC_SM_AH_009 = To verify that Proper Error message should when transaction amount is more than balance.
TC_SM_AH_010 = To verify that user should not perform Send Money with Invalid MSISDN.
TC_SM_AH_011 = To verify that Proper Error message should be displayed when OTP is Incorrect.
TC_SM_AH_012 = To verify that Proper Error message should be displayed when OTP is Incomplete
TC_SM_AH_013 = To verify that user should be able to select the contact from contact list and perform send money successfully.
TC_SM_AH_014 = To verify user should be able to perform transaction with alphanumeric name.
TC_SM_AH_015 = To verify user should be able to perform transaction with numeric name.
TC_SM_AH_016 = To verify user should be able to perform transaction with name having special character.
TC_SM_AH_017 = To verify user should be able to perform transaction with decimal amount.
TC_SM_AH_018 = To verify that proper validation should be displayed when amount exceed the transaction limit.


#------------------------------x-------------x--------------------------

#----------------------Request MOney----------------------------------------
TC0050 = To verify that user should not request money with Empty MSISDN Field.
TC0051 = To verify that user should not request money with Empty AMOUNT Field.
TC0052 = To verify that user should be able to request money with Empty DESCRIPTION Field.
TC0053 = To verify that user should not perform request money with Invalid MSISDN.
TC0054 = To verify that user should not perform request money with ZERO AMOUNT.
TC0055 = To verify that user should  perform request money with any amount.
TC0056 = To verify that user should not perform request money with BLACKLISTED MSISDN.
TC0057 = To verify that user should not perform request money with SUSPENDED MSISDN.
TC0058 = To verify that user should not perform request money to ITSELF.
TC0059 = To verify that user should not request money to unregistered user with country code +973.
TC0060 = To verify that user should not request money to unregistered user with country code +968.
TC0061 = To verify that user should not request money to unregistered user with country code +965.
TC0062 = To verify that user should not request money to unregistered user with country code +974.
TC0063 = To verify that user should not request money to unregistered user with country code +966.
TC0064 = To verify that user should not request money to unregistered user with country code +971.
TC0065 = To verify that user should perform request money successfully with valid MSISDN And PIN with country code +973.
TC0066 = To verify that user should perform request money successfully with valid MSISDN And PIN with country code +968.
TC0067 = To verify that user should perform request money successfully with valid MSISDN And PIN with country code +965.
TC0068 = To verify that user should perform request money successfully with valid MSISDN And PIN with country code +974.
TC0069 = To verify that user should perform request money successfully with valid MSISDN And PIN with country code +966.
TC0070 = To verify that user should perform request money successfully with valid MSISDN And PIN with country code +971.
TC0071 =
TC0072 =
TC0073 =
#------------------------------x-------------x--------------------------

#----------------------Batelco Services----------------------------------------
TC0090 = To verify that user should able to perform Postpaid.
#------------------------------x-------------x--------------------------


TC_Subscription_001=To verify that if user account is not upgraded then there should be option for upgrade.
TC_Subscription_002=To verify that proper validation message should be displayed if Terms and Conditions check box is not selected.
TC_Subscription_003=To verify that proper validation should be displayed if user doesn't have sufficient amount to pay for his subscription.
TC_Subscription_004=To verify that user successfully upgrade his/her account Successfully.
TC_Subscription_005=To verify that user should get sms for his/her premium plan.
TC_Subscription_006=To verify that user should get push notification for his/her premium plan.
TC_Subscription_007=To verify that user should not able to upgrade his account if he is already premium member.



#--------------------Bharain Merchant Payment-------------------------------------------------------------------------------------------------#

TC_MP_001 = To verify that user should not be able to do merchant payment with Empty Merchant Number Field.
TC_MP_002 = To verify that user should not be able to do merchant payment with Incomplete Merchant Number.
TC_MP_003 = To verify that user should not be able to do merchant payment with Invalid Merchant Number.
TC_MP_004 = To verify that user should not be able to do merchant payment to SELF MSISDN.
TC_MP_005 = To verify that user should not be able to do merchant payment to Incorrect Merchant Number.
TC_MP_006 = To verify that user should not be able to do merchant payment to Blocked Merchant Number.
TC_MP_007 = To verify that user should not be able to do merchant payment with Empty AMOUNT Field.
TC_MP_008 = To verify that user should not be able to do merchant payment with ZERO AMOUNT.
TC_MP_009 = To verify that user should not be able to do merchant payment with amount more than avilable BALANCE.
TC_MP_010 = To verify that user should not be able to do merchant payment with amount more than the Threshold limit.
TC_MP_011 = To verify that user should be able to do merchant payment successfully with valid MSISDN And PIN with country code +973.


#--------------------------ChangePin------------------------------------

TC_ChangePin_001:To verify that user should not be able to set his new pin if security answer entered is incorrect.
TC_ChangePin_002:To verify that user should not be able to set his new pin in series of increasing order.
TC_ChangePin_003:To verify that user should not be able to set his new pin in series of decreasing  order.
TC_ChangePin_004:To verify that user should not be able to change pin new pin and confirm pin is set as 3rd last pin
TC_ChangePin_005:To verify that user should not be able to change pin new pin and confirm pin is set as 2nd last pin
TC_ChangePin_006:To verify that user should not be able to set his pin when current pin, new pin and confirm pin are same.
TC_ChangePin_007:To verify that user should not be able to change PIN when current pin is incorrect.
TC_ChangePin_008:To verify that user should not be able to change pin when new pin and confirm is are not same
TC_ChangePin_009:To verify that user should not be able to change pin when the old pin is empty.
TC_ChangePin_010:To verify that user should not be able to change pin when new pin is empty.
TC_ChangePin_011:To verfiy that user should not be able to change pin when confirm pin is empty.
TC_ChangePin_012:To verify that user should not be able to set pin when Old pin have invaild length.
TC_ChangePin_013:To verify that user should not be able to set pin when new pin have invaild length.
TC_ChangePin_014:To verify that user should not be able to set pin when confirm pin have invaild length.
TC_ChangePin_015:To verify that user should not be able to set his new pin when it contains repetitive digits.
TC_ChangePin_016:To verify that user should be able to perform change PIN service successfully.

#-----------------------ForgotPin-----------------
TC_ForgotPin_001: To verify that proper error message should be displayed when msisdn is not entered.
TC_ForgotPin_002: To verify that proper error message should be displayed when  msisdn is of invalid length.
TC_ForgotPin_003: To verify that proper error message should be displayed when msisdn is not registered.
TC_ForgotPin_004: To verify that proper error message should be displayed for entering invalid msisdn.  
TC_ForgotPin_005: To verify that proper error messsage should be displayed when otp is of invalid length.
TC_ForgotPin_006: To verify that proper validation message should be displayed if OTP field is empty and resend Otp screen is present.
TC_ForgotPin_007: To verify that user should not able to proceed with wrong OTP.
TC_ForgotPin_008: To verify that proper validation should be diaplyed when Security answer is not entered.
TC_ForgotPin_009: To verify that proper error message should be displayed when security answer enter in not correct.
TC_ForgotPin_010: To verify that user should not be able to set his new pin in series of increasing order.
TC_ForgotPin_011: To verify that user should not be able to set his new pin in series of decreasing order.
TC_ForgotPin_012: To verfiy that user should not be able to change pin when both new and confirm pin is empty
TC_ForgotPin_013: To verfiy that user should not be able to change pin when confirm pin is empty
TC_ForgotPin_014: To verfiy that user should not be able to change pin when new pin is empty
TC_ForgotPin_015: To verify that user should not be able to set pin when new pin have invaild length
TC_ForgotPin_016: To verify that user should not be able to set pin when confirm pin have invaild length
TC_ForgotPin_017: To verify that user should not be able to set pin when both new pin and confirm pin have invaild length
TC_ForgotPin_018: To verify that user should not be able to change pin when new pin and confirm pin are not same
TC_ForgotPin_019: To verify that user should not be able to change pin new pin and confirm pin is set as 2nd last pin
TC_ForgotPin_020: To verify that user should not be able to change pin new pin and confirm pin is set as 3rd last pin
TC_ForgotPin_021: To verify that user should be able to perform forgot pin successfully.
#TC_ForgotPin_024: To verify that user is able to set new security answer and pin from forgot security answer.


#Batelco services Postpaid
TC_BS_Postaid_001=To verify that user should not be able to do postpaid payment with Empty MSISDN Field.
TC_BS_Postaid_002=To verify that user should not be able to do postpaid payment with Empty AMOUNT Field.
TC_BS_Postaid_003=To verify that user should not be able to do postpaid payment with incomplete MSISDN Field.
TC_BS_Postaid_004=To verify that user should not be able to do postpaid payment with Zero AMOUNT Field.
TC_BS_Postaid_005=To verify that user should  be able to do postpaid payment with empty CPR Fileld.
TC_BS_Postaid_006=To verify that user should not be able to do postpaid payment with invalid MSISDN Fileld.
TC_BS_Postaid_007=To verify that user should not be able to do postpaid payment if sufficient amount is not avaiable.
TC_BS_Postaid_008=To verify that proper validation should be displayed during bill enquiry if CPR field left blank.
TC_BS_Postaid_009=To verify that transaction should be successful if user fetch the the bill and able to pay the amount if amount is positive integer.
TC_BS_Postaid_010=To verift that user should be able to edit the 



Wallet_Change_PIN_01=To verify that user should not be able to set his new pin in series of increasing order.
Wallet_Change_PIN_02=To verify that user should not be able to set his new pin in series of decreasing  order.
Wallet_Change_PIN_03=To verify that user should not be able to change pin when the old pin is empty.
Wallet_Change_PIN_04=To verify that user should not be able to change pin when new pin is empty
Wallet_Change_PIN_05=to verfiy that user should not be able to change pin when confirm pin is empty
Wallet_Change_PIN_06=To verify that user should not be able to set pin when new pin have invaild length
Wallet_Change_PIN_07=To verify that user should not be able to change PIN when current pin is incorrect.
Wallet_Change_PIN_08=To verify that user should not be able to change pin when new pin and confirm is are not same
Wallet_Change_PIN_09=To verify that user should not be able to change pin new pin and confirm pin is set as 2nd last pin
Wallet_Change_PIN_10=To verify that user should not be able to change pin new pin and confirm pin is set as 3rd last pin
Wallet_Change_PIN_11=To verify that user should not be able to set his pin when current pin, new pin and confirm pin are same
Wallet_Change_PIN_12=To verify that user should be logged out after successful change of wallet pin.
Wallet_Change_PIN_13=To verify that user should be able to login successfully with new pin after change pin functionality is performed.

#----------------------SplitBill--------------
TC_SB_001:To verify that user should be able create group successfully.
TC_SB_002:To verify that user should not able to make group with 1 users.
TC_SB_003:To verify that proper validation should be dipslayed if user proceed without entering the group name.
TC_SB_004:To verify that proper validation should be displayed if user tries to enter the duplicate name of Group name.
TC_SB_005:To verify that initiator should not be part of the group.
TC_SB_006:To verify that proper validation should be displayed if user tries to add invalid number.
TC_SB_007:To verify that proper validation should be displayed if user tries to add member in the group more than configured members.
TC_SB_008:To verify that user should be able to add member in the existing group.
TC_SB_009:To verify that user should be able to delete the member from the group.
TC_SB_010:To verify that user should be able to delete the group.
TC_SB_011:To verify that while initiating the split bill request the amount should be\u00A0 equally split between all contacts including the initiator by default.
TC_SB_012:To verify that user should not able to delete the user if group member is equal to atleast configured member.
TC_SB_013:To verify that user should be able to approve requested amount before the configured time frame.
TC_SB_014:To verify that payer should be able to reject the requested amount withing the configured time frame.
TC_SB_015:To verify that proper validation should be displayed if payer should not have sufficient amount while accepting the request.
TC_SB_016:To verify that no amount should be deducted while rejecting the requested amount.
TC_SB_017:To verify that user should be able to see the successful transaction notification and transaction history.
#--------------------Donation----------------------------
TC_Donation_001:To verify that customer should be able to proceed for donation with valid merchant MSISDN of merchant.
TC_Donation_002:To verify that customer should  not be able to perform donation if amount field Empty.
TC_Donation_003:To verify that customer should be able to view SUCCESS  transaction status after donation successful.
TC_Donation_004:To verify that customer should not be able to perform donation if enter amount is zero.
TC_Donation_005:To verify that customer should be able to view that transaction in their transaction history.
TC_Donation_006:To verify that customer should not be able to perform donation if customer enter's  amount maximum than their wallet balance.

#----------------ChangeLoginId--------------------------------------------------------
TC_CL_001:To verify that user should be able to change email from his profile.
TC_CL_002:To verify proper validation should be displayed when email is in invalid format.
TC_CL_003:To verify that proper validation should be displayed when OTP is not entered.
TC_CL_004:To verify that proper validation should be displayed when invalid OTP is entered.
TC_CL_005:To verify that user should be able to update numeric email.
TC_CL_006:To verify that user should be able to update alpha numeric email.
TC_CL_007:To verify that user should be able to update an email staring with numnber.
TC_CL_008:To verify that proper validation should be displayed when timer is stopped.
TC_CL_009:To verify that proper validation should be displayed when user proceed to enter otp after expiry time.
TC_CL_010:To verify that proper validation should be displayed when user do the inavlid operation on otp after expiary time .
TC_CL_011:To verify that user should be able to change email from his profile using re-send otp options.

#-----------Forgot PIN Ahli Bank------------
TC_AH_FP_001:To verify that proper validation should be displayed when msisdn is not entered.
TC_AH_FP_002:To verify that proper error message should be displayed when invalid msisdn length is enetered.
TC_AH_FP_003:To verify that proper error message should be displayed when otp is not entered.
TC_AH_FP_004:To verify that proper error message should be displayed when otp is of invalid length.
TC_AH_FP_005:To verify that proper error message should be displayed when otp is incorrect.
TC_AH_FP_006:To verify that proper validation should be displayed when id entered is blank.
TC_AH_FP_007:To verify that proper error message should be displayed when id entered is in decimal.
TC_AH_FP_008:TO verify that proper validation should be displayed when id number is incorrect.
TC_AH_FP_009:To verify that proper error message should be displayed when new pin and confirm pin is blank.
TC_AH_FP_010:To verify that proper error message should be displayed when new pin and confirm pin is not same.
TC_AH_FP_011:TO verify that proper error message should be displayed when new pin is left blank.
TC_AH_FP_012:To verify that proper error message should be displayed when confirm pin is left blank.
TC_AH_FP_013:To verify that proper error message should be displayed when new Pin is in increasing order.
TC_AH_FP_014:To verify that proper error message should be displayed when new Pin and confirm pin are in decreasing order.
TC_AH_FP_015:TO verify that proper validation should be displayed when 3rd last pin is entered in Pin.
TC_AH_FP_016:TO verify that proper validation should be displayed when 2nd last pin is entered in Pin.
TC_AH_FP_017:TO verify that user should be able to change PIN successfully.
TC_AH_FP_018:To verify that proper error message should be displayed when new pin and confirm pin contain repeating digit.
TC_AH_FP_019:TO verify that proper error message should be displayed when msisdn is not registered.

#---------------------CustomerRegisteration--------------------------------------------------
TC_CR_001:To verify that after clicking on Disagree button user should not be able to register himself.
TC_CR_002:TO verify that proper validation should be displayed when msisdn is not entered.
TC_CR_003:TO verify that proper validation should be displayed when invalid msisdn is entered.
TC_CR_004:TO verify that proper error messge should be displayed when email is not entered.
TC_CR_005:To verify that proper validation message should be displayed if OTP field is empty and resend Otp screen is present.
TC_CR_006:To verify that proper validation should be displayed not able to proceed with wrong OTP
TC_CR_007:To verify that proper error message should be displayed when first name is blank.
TC_CR_008:To verify that proper error message should be displayed when last name is blank.
TC_CR_009:TO verify that proper validation should be displayed when DOB is not entered.
TC_CR_010:TO verify that proper error message should be displayed when geneder is not selected.
TC_CR_011:TO verify that proper error message should eb dispalyed when no country is selected. 
TC_CR_012:To verify that proepr error messgae should be displayed when no security answer is entered.
TC_CR_013:To verfiy that user should not be able to change pin when pin is empty
TC_CR_014:to verfiy that user should not be able to change pin when confirm pin is empty
TC_CR_015:To verify that user should not be able to set pin when new pin have invaild length
TC_CR_016:To verify that user should not be able to change pin when new pin and confirm is are not same

#---------------------------International Top-up------------------------------------------------------------------------
TC_ITP_001:To verify that user should not be able to proceed with empty Country Field.
TC_ITP_002:To verify that user should not be able to proceed with Invalid Country.
TC_ITP_003:To verify that user should not be able to proceed with empty MSISDN Field.
TC_ITP_004:To verify that user is not able to proceed with Incomplete MSISDN.
TC_ITP_005:To verify that user is not able to proceed with Invalid MSISDN.
TC_ITP_006:To verify that user is able to proceed with correct country and MSISDN
TC_ITP_007:To verify that user is able to select the prefered amount voucher for the Top-up
TC_ITP_008:To verify that user is able to complete International Top-up successfully

#-------------------Change Pin Ahli Bank----------------------------

TC_AH_CP_001:To verify that proper error message should be displayed when Id number is left blank.
TC_AH_CP_002:To verify that proper validation should be displayed when Id entered is in decimal.
TC_AH_CP_003:To verify that proper error message should be displayed when id entered is incorrect.
TC_AH_CP_004:To verify that proper error message should be displayed when OTP is not entered.
TC_AH_CP_005:To verify that proper error message should be displayed when OTP is of invalid length.
TC_AH_CP_006:To verify that proper error message should be displayed when OTP is incorrect.
TC_AH_CP_007:To verify that proper error message should be displayed when Old Pin is blank.
TC_AH_CP_008:To verify that proper error message should be displayed when New Pin is blank.
TC_AH_CP_009:To verify that proper error message should be displayed when Confirm Pin is blank.
TC_AH_CP_010:To verify that proper error message should be displayed when Old Pin is incorrect.
TC_AH_CP_011:To verify that proper error message should be displayed when new pin and confirm pin is not same.
TC_AH_CP_012:TO verify that proper error message should be displayed when new pin and confirm pin is of invalid length.
TC_AH_CP_013:To verify that proper error message should be displayed when new Pin and confirm pin are in increasing order.
TC_AH_CP_014:To verify that proper error message should be displayed when new Pin and confirm pin are in decreasing order.
TC_AH_CP_015:TO verify that proper validation should be displayed when 3rd last pin is entered in Pin.
TC_AH_CP_016:TO verify that proper validation should be displayed when 2nd last pin is entered in Pin.
TC_AH_CP_017: To verify that proper error message should be displayed when new pin and confirm pin contain repeating digit.
TC_AH_CP_018:TO verify that user should be able to change PIN successfully.



#-------------------Login_Ahli_Bank------------------------------------


TC_AH_Login_001:To verify that user should not login with Empty MSISDN Field.  
TC_AH_Login_002:To verify that user should not login with Invalid MSISDN .
TC_AH_Login_003:To verify that user should not login with Incomplete MSISDN .
TC_AH_Login_004:To verify that user should not login with Empty Password Field. 
TC_AH_Login_005:To verify that user should not login with Invalid Password.
TC_AH_Login_006:To verify that Proper validation should be displayed in entered Pin is wrong for 2nd Time.
TC_AH_Login_007:To verify that Proper validation should be displayed in entered Pin is wrong for 3rd Time.
TC_AH_Login_008:To verify that Proper validation should be displayed in entered Pin is wrong for 4th Time.
TC_AH_Login_009:To verify that Proper validation should be displayed in entered Pin is wrong for 5th Time.
TC_AH_Login_010:To verify that user should not login if User is blocked for Entering invalid PIN more than configured limit.
TC_AH_Login_011:To verify that user should not login with Incomplete PIN.   
TC_AH_Login_012:To verify that user should not login with Blacklisted Mobile Number.
TC_AH_Login_013:To verify that user should not login with Suspended Mobile Number.
TC_AH_Login_014:To verify that user should not login with Blacklisted Device.
TC_AH_Login_015:To verify that user should not login with Unregistered MSISDN.
TC_AH_Login_016:To verify that user should be login successfully with valid MSISDN And PIN.


TC_AH_BillPay_001:To verify that user should not be able to proceed with empty qatar id while performing bill payment.
TC_AH_BillPay_002:To verify that user should not be able to proceed with empty service number while performing bill payment.
TC_AH_BillPay_003:To verify that user should not be able to proceed with incomplete qatar id while performing bill payment.
TC_AH_BillPay_004:To verify that user should not be able to proceed with incomplete service number while performing bill payment.
TC_AH_BillPay_005:To verify that user should not be able to proceed with invalid qatar id while performing bill payment.
TC_AH_BillPay_006:To verify that user should not be able to proceed with invalid service number while performing bill payment.
TC_AH_BillPay_007:To verify that user should not be able to proceed with empty nickname field while performing bill payment.
TC_AH_BillPay_008:To verify that user should not be able to proceed with empty amount field while performing bill payment.
TC_AH_BillPay_009:To verify that user should not be able to proceed with zero amount while performing bill payment.
TC_AH_BillPay_010:To verify that user should not be able to proceed with more rhan avilable balance while performing bill payment.
TC_AH_BillPay_011:To verify that user should not be able to proceed without selecting terms and conditions while performing bill payment.    
TC_AH_BillPay_012:To verify that user should not be able to proceed with empty otp field while performing bill payment.                      
TC_AH_BillPay_013:To verify that user should not be able to proceed with invalid otp while performing bill payment.
TC_AH_BillPay_014:To verify that user should not be able to proceed with invalid otp for multiple time and proper validation should be displayed while performing bill payment.
TC_AH_BillPay_015:To verify that user should not be able to proceed with incomplete otp while performing bill payment.                       
TC_AH_BillPay_016:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.     
TC_AH_BillPay_017:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_AH_BillPay_018:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.    
TC_AH_BillPay_019:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.                            
TC_AH_BillPay_020:To verify that user should be able to pay his/her bill to Kahramaa biller with customized amount.
TC_AH_BillPay_021:To verify that user should be able to pay his/her bill to Kahramaa biller with fetched amount.
TC_AH_BillPay_022:To verify that user should not be able to add successful transaction as favourite if transaction name is empty.
TC_AH_BillPay_023:To verify that user should be able to add successful transaction as favourite transaction.
TC_AH_BillPay_024:To verify that user should receive the successful notification for successful transaction of bill payment.
TC_AH_BillPay_025:To verify that user's history should be updated for successful transaction of bill payment.

TC_AH_BillPay_026:To verify that user should not be able to proceed with empty qatar id while performing bill payment.
TC_AH_BillPay_027:To verify that user should not be able to proceed with empty service number while performing bill payment.
TC_AH_BillPay_028:To verify that user should not be able to proceed with incomplete qatar id while performing bill payment.
TC_AH_BillPay_029:To verify that user should not be able to proceed with incomplete service number while performing bill payment.
TC_AH_BillPay_030:To verify that user should not be able to proceed with invalid qatar id while performing bill payment.
TC_AH_BillPay_031:To verify that user should not be able to proceed with invalid service number while performing bill payment.
TC_AH_BillPay_032:To verify that user should not be able to proceed with empty nickname field while performing bill payment.
TC_AH_BillPay_033:To verify that user should not be able to proceed with empty amount field while performing bill payment.
TC_AH_BillPay_034:To verify that user should not be able to proceed with zero amount while performing bill payment.
TC_AH_BillPay_035:To verify that user should not be able to proceed with more rhan avilable balance while performing bill payment.
TC_AH_BillPay_036:To verify that user should not be able to proceed without selecting terms and conditions while performing bill payment.    
TC_AH_BillPay_037:To verify that user should not be able to proceed with empty otp field while performing bill payment.                      
TC_AH_BillPay_038:To verify that user should not be able to proceed with invalid otp while performing bill payment.
TC_AH_BillPay_039:To verify that user should not be able to proceed with invalid otp for multiple time and proper validation should be displayed while performing bill payment.
TC_AH_BillPay_040:To verify that user should not be able to proceed with incomplete otp while performing bill payment.                       
TC_AH_BillPay_041:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.     
TC_AH_BillPay_042:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_AH_BillPay_043:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.    
TC_AH_BillPay_044:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.                            
TC_AH_BillPay_045:To verify that user should be able to pay his/her bill to Ooredoo biller with customized amount.
TC_AH_BillPay_046:To verify that user should be able to pay his/her bill to Ooredoo biller with fetched amount.
TC_AH_BillPay_047:To verify that user should not be able to add successful transaction as favourite if transaction name is empty.
TC_AH_BillPay_048:To verify that user should be able to add successful transaction as favourite transaction.
TC_AH_BillPay_049:To verify that user should receive the successful notification for successful transaction of bill payment.
TC_AH_BillPay_050:To verify that user's history should be updated for successful transaction of bill payment.

TC_AH_BillPay_051:To verify that user should not be able to proceed with empty qatar id while performing bill payment.
TC_AH_BillPay_052:To verify that user should not be able to proceed with empty service number while performing bill payment.
TC_AH_BillPay_053:To verify that user should not be able to proceed with incomplete qatar id while performing bill payment.
TC_AH_BillPay_054:To verify that user should not be able to proceed with incomplete service number while performing bill payment.
TC_AH_BillPay_055:To verify that user should not be able to proceed with invalid qatar id while performing bill payment.
TC_AH_BillPay_056:To verify that user should not be able to proceed with invalid service number while performing bill payment.
TC_AH_BillPay_057:To verify that user should not be able to proceed with empty nickname field while performing bill payment.
TC_AH_BillPay_058:To verify that user should not be able to proceed with empty amount field while performing bill payment.
TC_AH_BillPay_059:To verify that user should not be able to proceed with zero amount while performing bill payment.
TC_AH_BillPay_060:To verify that user should not be able to proceed with more rhan avilable balance while performing bill payment.
TC_AH_BillPay_061:To verify that user should not be able to proceed without selecting terms and conditions while performing bill payment.    
TC_AH_BillPay_062:To verify that user should not be able to proceed with empty otp field while performing bill payment.                      
TC_AH_BillPay_063:To verify that user should not be able to proceed with invalid otp while performing bill payment.
TC_AH_BillPay_064:To verify that user should not be able to proceed with invalid otp for multiple time and proper validation should be displayed while performing bill payment.
TC_AH_BillPay_065:To verify that user should not be able to proceed with incomplete otp while performing bill payment.                       
TC_AH_BillPay_066:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.     
TC_AH_BillPay_067:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_AH_BillPay_068:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.    
TC_AH_BillPay_069:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.                            
TC_AH_BillPay_070:To verify that user should be able to pay his/her bill to Vodafone biller with customized amount.
TC_AH_BillPay_071:To verify that user should be able to pay his/her bill to Vodafone biller with fetched amount.
TC_AH_BillPay_072:To verify that user should not be able to add successful transaction as favourite if transaction name is empty.
TC_AH_BillPay_073:To verify that user should be able to add successful transaction as favourite transaction.
TC_AH_BillPay_074:To verify that user should receive the successful notification for successful transaction of bill payment.
TC_AH_BillPay_075:To verify that user's history should be updated for successful transaction of bill payment.

TC_AB_MB_001: To verify that the user is able to view the added beneficiary.
TC_AB_MB_002: To verify that the user is not able to delete the added beneficiary if he selects 'No' from delete button.
TC_AB_MB_003: To verify that the user is not able to delete the added beneficiary if he selects 'No' from delete button1.
TC_AB_MB_004: To verify that the user is not able to delete the added beneficiary if he selects 'No' from delete button2.


#---------------------------Top Up AND Data  Ahli bank-------------------------------------------------#

TC_AH_TopUpAndData_001:To verify that user should not be able to proceed with empty qatar id while performing bill payment.
TC_AH_TopUpAndData_002:To verify that user should not be able to proceed with empty service number while performing bill payment.
TC_AH_TopUpAndData_003:To verify that user should not be able to proceed with incomplete qatar id while performing bill payment.
TC_AH_TopUpAndData_004:To verify that user should not be able to proceed with incomplete service number while performing bill payment.
TC_AH_TopUpAndData_005:To verify that user should not be able to proceed with invalid qatar id while performing bill payment.
TC_AH_TopUpAndData_006:To verify that user should not be able to proceed with invalid service number while performing bill payment.
TC_AH_TopUpAndData_007:To verify that user should not be able to proceed with empty nickname field while performing bill payment.
TC_AH_TopUpAndData_008:To verify that user should not be able to proceed with empty amount field while performing bill payment.
TC_AH_TopUpAndData_009:To verify that user should not be able to proceed with zero amount while performing bill payment.
TC_AH_TopUpAndData_010:To verify that user should not be able to proceed with more rhan avilable balance while performing bill payment.
TC_AH_TopUpAndData_011:To verify that user should not be able to proceed without selecting terms and conditions while performing bill payment.    
TC_AH_TopUpAndData_012:To verify that user should not be able to proceed with empty otp field while performing bill payment.                      
TC_AH_TopUpAndData_013:To verify that user should not be able to proceed with invalid otp while performing bill payment.
TC_AH_TopUpAndData_014:To verify that user should not be able to proceed with invalid otp for multiple time and proper validation should be displayed while performing bill payment.
TC_AH_TopUpAndData_015:To verify that user should not be able to proceed with incomplete otp while performing bill payment.                       
TC_AH_TopUpAndData_016:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.     
TC_AH_TopUpAndData_017:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_AH_TopUpAndData_018:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.    
TC_AH_TopUpAndData_019:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.                            
TC_AH_TopUpAndData_020:To verify that user should be able to pay his/her bill to Ooredoo biller with customized amount.
TC_AH_TopUpAndData_021:To verify that user should be able to pay his/her bill to Ooredoo biller with fetched amount.
TC_AH_TopUpAndData_022:To verify that user should not be able to add successful transaction as favourite if transaction name is empty.
TC_AH_TopUpAndData_023:To verify that user should be able to add successful transaction as favourite transaction.
TC_AH_TopUpAndData_024:To verify that user should receive the successful notification for successful transaction of bill payment.
TC_AH_TopUpAndData_025:To verify that user's history should be updated for successful transaction of bill payment.

TC_AH_TopUpAndData_026:To verify that user should not be able to proceed with empty qatar id while performing bill payment.
TC_AH_TopUpAndData_027:To verify that user should not be able to proceed with empty service number while performing bill payment.
TC_AH_TopUpAndData_028:To verify that user should not be able to proceed with incomplete qatar id while performing bill payment.
TC_AH_TopUpAndData_029:To verify that user should not be able to proceed with incomplete service number while performing bill payment.
TC_AH_TopUpAndData_030:To verify that user should not be able to proceed with invalid qatar id while performing bill payment.
TC_AH_TopUpAndData_031:To verify that user should not be able to proceed with invalid service number while performing bill payment.
TC_AH_TopUpAndData_032:To verify that user should not be able to proceed with empty nickname field while performing bill payment.
TC_AH_TopUpAndData_033:To verify that user should not be able to proceed with empty amount field while performing bill payment.
TC_AH_TopUpAndData_034:To verify that user should not be able to proceed with zero amount while performing bill payment.
TC_AH_TopUpAndData_035:To verify that user should not be able to proceed with more rhan avilable balance while performing bill payment.
TC_AH_TopUpAndData_036:To verify that user should not be able to proceed without selecting terms and conditions while performing bill payment.    
TC_AH_TopUpAndData_037:To verify that user should not be able to proceed with empty otp field while performing bill payment.                      
TC_AH_TopUpAndData_038:To verify that user should not be able to proceed with invalid otp while performing bill payment.
TC_AH_TopUpAndData_039:To verify that user should not be able to proceed with invalid otp for multiple time and proper validation should be displayed while performing bill payment.
TC_AH_TopUpAndData_040:To verify that user should not be able to proceed with incomplete otp while performing bill payment.                       
TC_AH_TopUpAndData_041:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.     
TC_AH_TopUpAndData_042:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_AH_TopUpAndData_043:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.    
TC_AH_TopUpAndData_044:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.                            
TC_AH_TopUpAndData_045:To verify that user should be able to pay his/her bill to Vodafone biller with customized amount.
TC_AH_TopUpAndData_046:To verify that user should be able to pay his/her bill to Vodafone biller with fetched amount.
TC_AH_TopUpAndData_047:To verify that user should not be able to add successful transaction as favourite if transaction name is empty.
TC_AH_TopUpAndData_048:To verify that user should be able to add successful transaction as favourite transaction.
TC_AH_TopUpAndData_049:To verify that user should receive the successful notification for successful transaction of bill payment.
TC_AH_TopUpAndData_050:To verify that user's history should be updated for successful transaction of bill payment.

#---------------------------Merchant payment Ahli bank-------------------------------------------------#

TC_MP_AB_001:To verify that customer should not be able to proceed without entering Merchant Code.
TC_MP_AB_002:To verify that customer should not be able to proceed with invalid merchant id.
TC_MP_AB_003:To verify that customer should not be able to proceed with incomplete merchant id.
TC_MP_AB_004:To verify that customer should not be able to proceed with barred merchant id.
TC_MP_AB_005:To verify that customer should not be able to proceed without entering Merchant Name.
TC_MP_AB_006:To verify that customer should not be able to proceed without entering Description.
TC_MP_AB_007:To verify that customer should not be able to proceed without entering payment amount.
TC_MP_AB_008:To verify that customer should not be abel to proceed with zero amount.
TC_MP_AB_009:To verfiy that customer should not be able to proceed with amount more than wallet balance.
TC_MP_AB_010:To verify that customer should not be able to proceed with amount less than the threshold limit.
TC_MP_AB_011:To verify that customer should not be able to proceed without accepting Terms and conditions.
TC_MP_AB_012:To verify that customer should not be able to proceed without entering OTP.
TC_MP_AB_013:To verify that customer should not be able to proceed with invalid OTP.
TC_MP_AB_014:To verify that customer should not be able to proceed with incomplete OTP.
TC_MP_AB_015:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.
TC_MP_AB_016:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_MP_AB_017:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.
TC_MP_AB_018:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.
TC_MP_AB_019:To verify that customer should be able to complete the merchant payment successfully.


#----------------------------Transfer To Bank--------------------------------------------------------------#
TC_TTB_AB_02:To verify that customer should not be able to proceed without entering payment amount.
TC_TTB_AB_03:To verify that customer should not be abel to proceed with zero amount.
TC_TTB_AB_01:To verfiy that customer should not be able to proceed with amount more than wallet balance.
TC_TTB_AB_04:To verify that customer should not be able to proceed with amount more than the threshold limit.
TC_TTB_AB_05:To verify that customer should not be able to proceed without entering OTP.
TC_TTB_AB_06:To verify that customer should not be able to proceed with invalid OTP.
TC_TTB_AB_07:To verify that customer should not be able to proceed with incomplete OTP.
TC_TTB_AB_08:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.
TC_TTB_AB_09:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_TTB_AB_010:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.
TC_TTB_AB_011:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.
TC_TTB_AB_012:To verify that the customer should able to transfer to bank successfully.

#----------------------Merchant LOGIN----------------------------------------

TC_MAH_01:To verify that user should not login with Empty MSISDN Field.  
TC_MAH_02:To verify that user should not login with Invalid MSISDN .
TC_MAH_03:To verify that user should not login with Incomplete MSISDN .
TC_MAH_04:To verify that user should not login with Blacklisted Mobile Number.
TC_MAH_05:To verify that user should not login with Suspended Mobile Number.
TC_MAH_06:To verify that user should not login with Blacklisted Device.
TC_MAH_07:To verify that user should not login with Unregistered MSISDN.
TC_MAH_08:To verify that user should not login with Empty Password Field. 
TC_MAH_09:To verify that user should not login with Incomplete PIN.
TC_MAH_010:To verify that user should not login with Invalid Password.
TC_MAH_011:To verify that Proper validation should be displayed in entered Pin is wrong for 2nd Time.
TC_MAH_012:To verify that Proper validation should be displayed in entered Pin is wrong for 3rd Time.
TC_MAH_013:To verify that Proper validation should be displayed in entered Pin is wrong for 4th Time.
TC_MAH_014:To verify that Proper validation should be displayed in entered Pin is wrong for 5th Time.
TC_MAH_015:To verify that user should not login if User is blocked for Entering invalid PIN more than configured limit.
TC_MAH_016:To verify that user should be login successfully with valid MSISDN And PIN.

#----------------------------------Arab Bank Palestine login----------------------------------------------------------------------------
TC_ABP_001:To verify that user should not login with Empty MSISDN Field.
TC_ABP_002:To verify that user should not login with Invalid MSISDN .
TC_ABP_003:To verify that user should not login with Incomplete MSISDN .
TC_ABP_004:To verify that user should not login with Blacklisted Mobile Number.
TC_ABP_005:To verify that user should not login with Suspended Mobile Number.
TC_ABP_006:To verify that user should not login with Blacklisted Device.
TC_ABP_007:To verify that user should not login with Unregistered MSISDN.
TC_ABP_008:To verify that user should not login with Empty Password Field. 
TC_ABP_009:To verify that user should not login with Incomplete PIN.
TC_ABP_010:To verify that user should not login with Invalid Password.
TC_ABP_011:To verify that Proper validation should be displayed in entered Pin is wrong for 2nd Time.
TC_ABP_012:To verify that Proper validation should be displayed in entered Pin is wrong for 3rd Time.
TC_ABP_013:To verify that user should not login if User is blocked for Entering invalid PIN more than configured limit.
TC_ABP_014:To verify that the user is able to login successfully.


#----------------------------------Ahli Bank Merchant Refund-------------------------------

TC_MR_AB_01:To verify that the merchant is not able to refund with Empty transaction field.
TC_MR_AB_02:To verify that the merchant is not able to refund with invalid transaction ID.
TC_MR_AB_03:To verify that the merchant is not able to refund with incomplete transaction ID.
TC_MR_AB_04:To verify that the merchant is not able to refund with already refunded transaction.
TC_MR_AB_05:To verfiy that customer should not be able to proceed with amount more than wallet balance.
TC_MR_AB_06:To verify that customer should not be able to proceed with amount more than the threshold limit.
TC_MR_AB_07:To verify that customer should not be able to proceed without entering OTP.
TC_MR_AB_08:To verify that customer should not be able to proceed with invalid OTP.
TC_MR_AB_09:To verify that customer should not be able to proceed with incomplete OTP.
TC_MR_AB_010:To verify that user should be able to use the cancel option and confirmation screen should get pop-up.
TC_MR_AB_011:To verify that user should re-direct to home screen if user choose the cancel postive action from OTP page.
TC_MR_AB_012:To verify that user should be able to enter the OTP and proceed further if user click on re-try option.
TC_MR_AB_013:To verify that user should be able to re-send the OTP in case of any issue while receiving the OTP.
TC_MR_AB_014:To verify that merchant should be able to refund successfully.

#--------------------------------Palestine Merchant Pay-------------------------------------------------------------------

TC_MPay_001 = To verify that user should not be able to do merchant payment with Empty Merchant Number Field.
TC_MPay_002 = To verify that user should not be able to do merchant payment with Incomplete Merchant Number.
TC_MPay_003 = To verify that user should not be able to do merchant payment with Invalid Merchant Number.
TC_MPay_004 = To verify that user should not be able to do merchant payment to SELF MSISDN.
TC_MPay_005 = To verify that user should not be able to do merchant payment with Empty AMOUNT Field.
TC_MPay_006 = To verify that user should not be able to do merchant payment with ZERO AMOUNT.
TC_MPay_007 = To verify that user should not be able to do merchant payment with amount more than avilable BALANCE.
TC_MPay_008 = To verify that user should not be able to do merchant payment with amount more than the Threshold limit.
TC_MPay_009 = To verify that user should be able to do merchant payment successfully with valid MSISDN And PIN with country code +970.
TC_MPay_010 = To verify that user should not be able to do merchant payment to Unregistered Merchant Number.







#----------------------SplitBill--------------
TC_SBP_001:To verify that user should be able to create a split bill group successfully.
TC_SBP_002:To verify that user should not be able to make a group with 1 user.
TC_SBP_003:To verify that proper validation should be dipslayed if user proceed without entering the group name.
TC_SBP_004:To verify that proper validation should be displayed if user tries to enter the duplicate name of Group name.
TC_SBP_005:To verify that initiator should not be part of the group.
TC_SBP_006:To verify that proper validation should be displayed if user tries to add invalid number.
TC_SBP_007:To verify that proper validation should be displayed if user tries to add member in the group more than configured members.
TC_SBP_008:To verify that user should be able to add member in the existing group.
TC_SBP_009:To verify that user should be able to delete the member from the group.
TC_SBP_010:To verify that user should be able to delete the group.
TC_SBP_011:To verify that while initiating the split bill request the amount should be equally split between all contacts including the initiator by default.
TC_SBP_012:To verify that user should not able to delete the user if group member is equal to atleast configured member.
TC_SBP_013:To verify that user should be able to approve requested amount before the configured time frame.
TC_SBP_014:To verify that payer should be able to reject the requested amount withing the configured time frame.
TC_SBP_015:To verify that proper validation should be displayed if payer should not have sufficient amount while accepting the request.
TC_SBP_016:To verify that no amount should be deducted while rejecting the requested amount.
TC_SBP_017:To verify that user should be able to see the successful transaction notification and transaction history.

#---------------------ATM Cashout palestine---------------
TC_ATM_001: To verify that the user should not be able to perform ATM Cashout with empty amount.
TC_ATM_002: To verify that the user should not be able to perform ATM Cashout with zero amount.
TC_ATM_003: To verify that the user is not able to perform ATM cashout less than the minimum 20 ILS amount.
TC_ATM_004: To verify that the user should not be able to perform ATM cashout when the amount entered is not a multiple of 20.
TC_ATM_005: To verify that the user should not be able to perform ATM cashout more than his wallet balance.
TC_ATM_006: To verify that the maximum allowed limit of ATM cashout is 1600 ILS.
TC_ATM_007: To verify that the user should be able to perform ATM cashout transaction only if the amount entered matches with the final amount on the Confirm page.
TC_ATM_008: To verify that the user's wallet balance should be debited with the transaction amount after successfully performing ATM cashout service. 
TC_ATM_009: To verify that the user should be able to perform ATM cashout successfully.
TC_ATM_010: To verify that the user should receive an OTP for the successful ATM cashout transaction.
TC_ATM_011: To verify that the user should be able to perform ATM Cashout by clicking on the 100ILS button.
TC_ATM_012: To verify that the user should be able to perform ATM Cashout by clicking on the 200ILS button.
TC_ATM_013: To verify that the user should be able to perform ATM Cashout by clicking on the 400ILS button.
TC_ATM_014: To verify that the user should be able to perform ATM Cashout by clicking on the 600ILS button.





#----------------------Profile Update Ahli Bank-----------------------------------------

TC_Profile_001 : To verify that proper error message should be displayed when email id is blank.
TC_Profile_002 : To verify that user should be able to update email successfully with alphabetic values.
TC_Profile_003 : To verify that user should be able to update email successfully with alphanumeric values.
TC_Profile_004 : To verify that proper error message should be displayed when email entered is in invalid format.
TC_Profile_005 : To verify that user should be able to update email successfully with numeric values.
TC_Profile_006 : To verify that proper error message should be displayed when email have special character.
TC_Profile_007 : To verify that proper error message should be displayed when building number is blank.
TC_Profile_008 : To verify that proper error message should be displayed when flat number is blank.
TC_Profile_009 : To verify that proper error message should be displayed when street name is blank. 
TC_Profile_010 : To verify that proper error message should be displayed when zone is blank.
TC_Profile_011 : To verify that proper error message hsould be displayed when P.O Number is blank.
TC_Profile_012 : To verify that user should be able to update P.O number successfully.
TC_Profile_013 : To verify that user should be able to flat Number successfully.
TC_Profile_014 : To verify that user should be able to update building number successfully.
TC_Profile_015 : To verify that user should be able to update street name successfully with numeric value.
TC_Profile_016 : To verify that user should be able to update street name successfully with alphanumeric value.
TC_Profile_017 : To verify that user should be able to update street name successfully with alphabetic value.
TC_Profile_018 : To verify that user should be able to update street name successfully with special character.

#---------------------------------payXSmoke SMOKE-----------------------------------------------------------



SMOKE_TC_01 : To verify that user will be able to perform recharge service for any operator successfully.
SMOKE_TC_02 : To Verify that, User is able to enter the customer id in input box to pay the electricity bill.
SMOKE_TC_04 : To Verify that , Customer user is able to transfer money from their own SVA to un-register customer.
SMOKE_TC_05 : To Verify that , The bussiness user is able to initiate the cash-out services for transaction.
SMOKE_TC_06 : To verify that user is able to choose currency from the dropdown.
SMOKE_TC_07 : To Verify that, User will not able to login if user enter invalid credentials into login page.
SMOKE_TC_08 : To Verify that, User is able to login with another account.
SMOKE_TC_12 : To verify that, customer is able to change his pin using change pin option.
SMOKE_TC_13 : [SMOKE_TC_12's Duplicate] To Verify that, User is able to change the PIN after clicking on the security option.
SMOKE_TC_14 : [SMOKE_TC_12's Duplicate] To verify that the user should be able to change pin successfully  after clicking on Security.
SMOKE_TC_15 : To verify that user should able to set security questions along with their answers  successfully.
SMOKE_TC_16 : To verify that customer can be transform fund to his own other wallet successfully.
SMOKE_TC_17 : To verify that any security questions can  be selected successfully.




#---------------------------------payXSmoke UAT-----------------------------------------------------------

payXUAT782 : To verify that user is able to click on bill pay button.
payXUAT784 : To verify that user is able to do bill pay.
payXUAT785 : To verify that after successful/failed recahrge user is able to see following details: 1.Service Type, 2.Mobile Number, 3.Name and Operator, 4.Transaction id, 5.Date and time of bill pay.
payXUAT786 : To verify that user is able to do another bill payment from transaction successful page.
payXUAT787 : To verify that user is able to view transactions form bill pay successful page.
payXUAT1782 : To verify that customer is able to pay the bill successfully.
payXUAT122 : To Verify that, During the entering the PIN, the PIN would be  shown in masking forms to user.
payXUAT127 : To Verify that , After click on the home button user is able to directly go to dashboard page.
payXUAT123 : To Verify that, User is able to see all the failed transaction details on the screen.
payXUAT124 : To Verify that, the user is able to see particular order details on the transaction history page.
payXUAT115 : To verify that After successfully electrical bill pay transaction, The amount will be deducted from user choosed wallet.



payXUAT138 : To Verify that, After entering the mobile no. and amount  user would be able to click on the next button.
payXUAT149 : To verify that User will not be able to perform the Deposit cash service. If Transfer rule is suspended.
payXUAT153 : To Verify that, if payerr reachout cumulative amount on weekly limit then payerr will not be able to perform any transaction.

payXUAT1184 : To verify that the user should be able to change pin successfully  after clicking on Security.
payXUAT1195 : To verify that user able to Login with old PIN after change PIN.
payXUAT1183 : To verify that merchant should be able to login successfully with new pin after change pin functionality is performed.



